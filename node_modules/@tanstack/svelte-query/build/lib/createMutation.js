import { derived, readable } from 'svelte/store';
import { MutationObserver, notifyManager, parseMutationArgs, } from '@tanstack/query-core';
import { useQueryClient } from './useQueryClient';
export function createMutation(arg1, arg2, arg3) {
    const options = parseMutationArgs(arg1, arg2, arg3);
    const queryClient = useQueryClient();
    let observer = new MutationObserver(queryClient, options);
    let mutate;
    readable(observer).subscribe(($observer) => {
        observer = $observer;
        mutate = (variables, mutateOptions) => {
            observer.mutate(variables, mutateOptions).catch(noop);
        };
        observer.setOptions(options);
    });
    const result = readable(observer.getCurrentResult(), (set) => {
        return observer.subscribe(notifyManager.batchCalls((val) => set(val)));
    });
    const { subscribe } = derived(result, ($result) => ({
        ...$result,
        mutate,
        mutateAsync: $result.mutate,
    }));
    return { subscribe };
}
// eslint-disable-next-line @typescript-eslint/no-empty-function
function noop() { }
